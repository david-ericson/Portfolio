using UnityEngine;
using System.Collections;

public class Character : MonoBehaviour 
{
    public Projectile defaultWeapon;
	private Controller controller;
	private int numKills, playerId;
	private bool invincible;
	private static int currentId = 0;
    private float invinTime = 1;
    private float invinCountdown;

	public Utility util;

	public int getNumKills()
	{
		return numKills;
	}
	
	public void setInvincible(bool val)
	{
		invincible = val;
        if (!val)
        {
            Color matCol = this.gameObject.renderer.material.color;
            this.gameObject.renderer.material.color = new Color(matCol.r, matCol.g, matCol.b, 1.0f);
        }
    }
	
	public bool getInvincible()
	{
		return invincible;
	}
	
	public void alterNumKills(int amount)
	{
		numKills += amount;
	}
	// Use this for initialization
	void Start () 
	{

        util = (Utility)Instantiate(util);
        if (util is Reflect)
        {
            ((Reflect)util).shieldPrefab.GetComponent<Shield>().characterNumber = playerId;
            ((Reflect)util).shieldPrefab.GetComponent<Shield>().materialOfParent = renderer.material;
        }
		//util = new CloneCloak ();
		//((CloneCloak)(util)).clonePrefab = clonePrefab;
		invincible = false;
		playerId = currentId++;
		controller = (Controller)this.gameObject.GetComponent("Controller");
		util.controller = controller;
		util.owningChar = this.gameObject;
		util.rigidBody = (Rigidbody)this.gameObject.GetComponent("Rigidbody");
		util.init ();
		this.gameObject.name = "player" + playerId;
		controller.setCharacter(playerId);
		float x = (Random.value * 10) - 5;
		float y = (Random.value * 10) - 5;
		float z = (Random.value * 10) - 5;
		CharacterProjectile cp = this.gameObject.GetComponent<CharacterProjectile>();
        cp.p.owner = this.gameObject;
		cp.p.bullet.characterNumber = playerId;
	}
	
	public int getId()
	{
		return playerId;
	}
	
	public void Restart()
	{
		numKills = 0;
	}
	
	// Update is called once per frame
	void Update () 
    {
        if (invinCountdown >= 0)
        {
            invinCountdown -= Time.deltaTime;
            invinCountdown = (invinCountdown <= 0)?-9000:invinCountdown;
        } 
        else if(invinCountdown == -9000)
        {
            invinCountdown = -.1f;
            invincible = false;
            Color matCol = this.gameObject.renderer.material.color;
            this.gameObject.renderer.material.color = new Color(matCol.r, matCol.g, matCol.b);
        }

        if (invincible)
        {
            Color matCol = this.gameObject.renderer.material.color;
            this.gameObject.renderer.material.color = new Color(matCol.r, matCol.g, matCol.b, .5f);
        }

		//util.customUpdate ();
		util.Update ();
	}

	public void Kill()
	{
		float x = 0;
		float y = 1;
		float z = 0;

		this.gameObject.transform.position = new Vector3 (x, y, z);
		this.rigidbody.isKinematic = true;
		this.rigidbody.isKinematic = false;
        defaultWeapon.owner = this.gameObject;
        this.gameObject.GetComponent<CharacterProjectile>().p =(Projectile)Instantiate(defaultWeapon);
        invinCountdown = invinTime;
        invincible = true;

	}
}

//Drew was here.