using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class GameManager : MonoBehaviour {
	public float startingTime;
	
	private float currentTime;
	private GUIStyle timerStyle, counterStyle, winStyle, pauseStyle;
	private Character[] players;
	public GameObject[] spawnPoints;
    public Material[] materials;
    public int gameType;
	private static GameManager me;
    private static int playerWhoPaused = -1;
    public static bool isPaused = false;
	// Use this for initialization
	void Start () {
		me = this;
		startingTime *= 60;
		currentTime = startingTime;
		timerStyle = new GUIStyle();
		counterStyle = new GUIStyle();
		winStyle = new GUIStyle();
		pauseStyle = new GUIStyle();
		timerStyle.fontSize = 25;
		counterStyle.fontSize = 45;
		winStyle.fontSize = 35;
		pauseStyle.fontSize = 45;
		timerStyle.normal.textColor = Color.white;
		counterStyle.normal.textColor = Color.red;
		winStyle.normal.textColor = Color.white;
		pauseStyle.normal.textColor = Color.white;
		pauseStyle.normal.textColor = Color.magenta;
	}
	
	public static void randomizeSpawn(Character c)
	{
		for(int i=0; i<me.players.Length; i++)
		{
			Character player = me.players[i].GetComponent<Character>();
			if(player == c)
			{
				Vector3 spawn = me.spawnPoints[Random.Range(0, me.spawnPoints.Length)].transform.position;
				Vector3 vpLoc = Camera.main.WorldToViewportPoint(spawn);
				while(vpLoc.x < 0 || vpLoc.x > 1 || vpLoc.y < 0 || vpLoc.y > 1)
				{
					spawn = me.spawnPoints[Random.Range(0, me.spawnPoints.Length)].transform.position;
					vpLoc = Camera.main.WorldToViewportPoint(spawn);
				}
				player.setSpawn(spawn);
                player.gameType=me.gameType;
                if(me.gameType==1)
                {
                    player.gameType=i;
                }
			}
		}
	}

    public static void Pause(int characterNumber)
    {
        if (playerWhoPaused != characterNumber)
        {
            if (!isPaused)
            {
                print("pause");
                Time.timeScale = 0;
                playerWhoPaused = characterNumber;
                isPaused = true;
            }
        } 
        else
        {
            if(isPaused)
            {
                print("unpause");
                Time.timeScale = 1;
                playerWhoPaused = -1;
                isPaused = false;
            }
        }
    }
	
	public static Character getPlayer(int playerId)
	{
		Character ret = null;
		foreach(Character p in me.players)
		{
			if(p.getId() == playerId)
			{
				ret = p;
			}
		}
		return ret;
	}
	
	
	// Update is called once per frame
	void Update () {
		if(currentTime == startingTime)
		{
			Object[] objects = GameObject.FindObjectsOfType(typeof(Character));
			players = new Character[objects.Length];
			for(int i=0; i<objects.Length; i++)
			{
                players[i] = (Character)objects[i];
                players[i].gameType=me.gameType;
                if(me.gameType==1)
                {
                    players[i].teamNum=i;
                }
                int check=(players[i].teamNum*4)+i;
                Material mCheck=me.materials[check];
                players[i].GetComponent<MeshRenderer>().material=new Material(mCheck);
                players[i].baseColor=players[i].GetComponent<MeshRenderer>().material.color;
			}
			GameObject[] spawns = GameObject.FindGameObjectsWithTag("SpawnPoint");
			spawnPoints = new GameObject[spawns.Length];
			spawnPoints = spawns;
		}
		if(currentTime > 0)
		{
			currentTime -= Time.deltaTime;
		}
		else
		{
			foreach (Character c in players) {
				c.setInvincible(true);
			}
		}
		if(Input.GetKeyDown(KeyCode.Space))
		{
			Restart();
		}
	}
	
	void Restart () 
	{
		currentTime = startingTime;
        int i = 0;
        ((MarathonCamera)(Camera.main.GetComponent<MarathonCamera>())).resetCam();
        
		foreach(Character c in players)
		{
            //randomizeSpawn(c);
			c.setInvincible(false);
			c.Restart();
            i++;
		}
	}
	
	int[] nabBestPlayer()
	{
		int highestKills = -1;
		List<int> indices = new List<int>();
		foreach(Character c in players)
		{
			if(c.getNumKills() > highestKills)
			{
				highestKills = c.getNumKills();
				indices.Clear();
				indices.Add(c.getId()+1);
			}
			else if(c.getNumKills() == highestKills)
			{
				indices.Add(c.getId()+1);
			}
		}
		return indices.ToArray();
	}
	
	static public bool isGameOver()
	{
		return me.currentTime <= 0;
	}
	
	void OnGUI()
	{
		int minutes = (int)(currentTime/60);
		int seconds = (int)(currentTime - minutes*60);
		string secondsString = (seconds < 10)?"0"+seconds:""+seconds;
		
		GUI.Box(new Rect((3*Screen.width/8),10,100,20), "Time Remaining "+minutes+":"+secondsString, timerStyle);
		int width = 80;
		int height = 40;

        int guiCounter = 0;

        if (me.gameType == 2)
        {
            int[] team=new int[4];
            int[] playersOnATeam=new int[4];
            for(int i=0; i<players.Length; i++)
            {
                if(players[i].teamNum==0)
                {
                    team[0]+=GameManager.getPlayer(i).getNumKills();
                    playersOnATeam[0]++;
                }
                else if(players[i].teamNum==1)
                {
                    team[1]+=GameManager.getPlayer(i).getNumKills();
                    playersOnATeam[1]++;
                }
                else if(players[i].teamNum==2)
                {
                    team[2]+=GameManager.getPlayer(i).getNumKills();
                    playersOnATeam[2]++;
                }
                else if(players[i].teamNum==3)
                {
                    team[3]+=GameManager.getPlayer(i).getNumKills();
                    playersOnATeam[3]++;
                }
            }
            for(int i=0; i<4; i++)
            {
                if(playersOnATeam[i]>0)
                {
                    switch(guiCounter)
                    {
                        case 0:
                            counterStyle.normal.textColor = new Color(1.0f,0.0f,0.0f,1.0f);
                            GUI.Box(new Rect(0, height,width,height), "");
                            GUI.Box(new Rect(0,height,width,height), ""+team[i], counterStyle);
                            break;
                        case 1:
                            counterStyle.normal.textColor = new Color(0.0f,0.0f,1.0f,1.0f);
                            GUI.Box(new Rect(Screen.width-width, height, width, height), "");
                            GUI.Box(new Rect(Screen.width-width, height, width, height), ""+team[i], counterStyle);
                            break;
                        case 2:
                            counterStyle.normal.textColor = new Color(0.0f,1.0f,0.0f,1.0f);
                            GUI.Box(new Rect(0, Screen.height-(2*height), width, height), "");
                            GUI.Box(new Rect(0, Screen.height-(2*height), width, height), ""+team[i], counterStyle);
                            break;
                        case 3:
                            counterStyle.normal.textColor = new Color(0.0f,1.0f,1.0f,1.0f);
                            GUI.Box(new Rect(Screen.width-width, Screen.height-(2*height), width, height), "");
                            GUI.Box(new Rect(Screen.width-width, Screen.height-(2*height), width, height), ""+team[i], counterStyle);
                            break;
                    }
                    guiCounter++;
                }
            }
        }
		else if(players.Length > 0)
		{
            Color c = GameManager.getPlayer(0).baseColor;

			counterStyle.normal.textColor = new Color(c.r,c.g,c.b,1.0f);
			int numKills = GameManager.getPlayer(0).getNumKills();
			
			GUI.Box(new Rect(0, height,width,height), "");
			GUI.Box(new Rect(0,height,width,height), ""+numKills, counterStyle);
            guiCounter++;

            int firstTeam=GameManager.getPlayer(0).teamNum;
			
			if(players.Length > 1)
			{
                c = GameManager.getPlayer(1).baseColor;
                
                counterStyle.normal.textColor = new Color(c.r,c.g,c.b,1.0f);
				numKills = GameManager.getPlayer(1).getNumKills();
				

                if(GameManager.getPlayer(1).teamNum==firstTeam)
                {
                    
                }
                else
                {
                    switch(guiCounter)
                    {
                        case 1:
                            GUI.Box(new Rect(0, Screen.height-(2*height), width, height), "");
                            GUI.Box(new Rect(0, Screen.height-(2*height), width, height), ""+numKills, counterStyle);
                            break;
                        case 2:
                            GUI.Box(new Rect(Screen.width-width, height, width, height), "");
                            GUI.Box(new Rect(Screen.width-width, height, width, height), ""+numKills, counterStyle);
                            break;
                        case 3:
                            GUI.Box(new Rect(Screen.width-width, Screen.height-(2*height), width, height), "");
                            GUI.Box(new Rect(Screen.width-width, Screen.height-(2*height), width, height), ""+numKills, counterStyle);
                            break;
                    }
                    guiCounter++;
                }

                int secondTeam=GameManager.getPlayer(1).teamNum;

				if(players.Length > 2)
				{
                    c = GameManager.getPlayer(2).baseColor;
                    
                    counterStyle.normal.textColor = new Color(c.r,c.g,c.b,1.0f);
					numKills = GameManager.getPlayer(2).getNumKills();
					
                    if(GameManager.getPlayer(2).teamNum==firstTeam || GameManager.getPlayer(2).teamNum==secondTeam)
                    {
                        
                    }
                    else
                    {
                        switch(guiCounter)
                        {
                            case 1:
                                GUI.Box(new Rect(0, Screen.height-(2*height), width, height), "");
                                GUI.Box(new Rect(0, Screen.height-(2*height), width, height), ""+numKills, counterStyle);
                                break;
                            case 2:
                                GUI.Box(new Rect(Screen.width-width, height, width, height), "");
                                GUI.Box(new Rect(Screen.width-width, height, width, height), ""+numKills, counterStyle);
                                break;
                            case 3:
                                GUI.Box(new Rect(Screen.width-width, Screen.height-(2*height), width, height), "");
                                GUI.Box(new Rect(Screen.width-width, Screen.height-(2*height), width, height), ""+numKills, counterStyle);
                                break;
                        }
                        guiCounter++;
                    }

                    int thirdTeam=GameManager.getPlayer(2).teamNum;

					if(players.Length > 3)
					{
                        c = GameManager.getPlayer(3).baseColor;
                        
                        counterStyle.normal.textColor = new Color(c.r,c.g,c.b,1.0f);
						numKills = GameManager.getPlayer(3).getNumKills();
						
                        if(GameManager.getPlayer(3).teamNum==firstTeam || GameManager.getPlayer(3).teamNum==secondTeam || GameManager.getPlayer(3).teamNum==thirdTeam)
                        {
                            
                        }
                        else
                        {
                            switch(guiCounter)
                            {
                                case 1:
                                    GUI.Box(new Rect(0, Screen.height-(2*height), width, height), "");
                                    GUI.Box(new Rect(0, Screen.height-(2*height), width, height), ""+numKills, counterStyle);
                                    break;
                                case 2:
                                    GUI.Box(new Rect(Screen.width-width, height, width, height), "");
                                    GUI.Box(new Rect(Screen.width-width, height, width, height), ""+numKills, counterStyle);
                                    break;
                                case 3:
                                    GUI.Box(new Rect(Screen.width-width, Screen.height-(2*height), width, height), "");
                                    GUI.Box(new Rect(Screen.width-width, Screen.height-(2*height), width, height), ""+numKills, counterStyle);
                                    break;
                            }
                            guiCounter++;
                        }
					}
				}
			}
		}
		if(isPaused)
		{
			GUI.Label(new Rect((int)(3*Screen.width/8),(int)(3*Screen.height/8), 150, 30), "PAUSE", pauseStyle);
			if(GUI.Button(new Rect((int)(3*Screen.width/8), (int)(6*Screen.height/8), 150, 30), "Back to Main Menu"))
			{
				Character.resetId();
				Application.LoadLevel("MainMenu");
			}
		}
		if(currentTime <= 0)
		{
			int[] topPlayers = nabBestPlayer();
			for(int i=0; i<topPlayers.Length; i++)
			{
                Color c = GameManager.getPlayer(topPlayers[i]-1).baseColor;
	            
	            winStyle.normal.textColor = new Color(c.r,c.g,c.b,1.0f);
				GUI.TextField(new Rect((int)(3*Screen.width/8), (int)(3*Screen.height/8)+i*winStyle.fontSize, 100, 20), "Player "+topPlayers[i]+" Wins!!!", winStyle);
			}
			if(GUI.Button(new Rect((int)(3*Screen.width/8), (int)(6*Screen.height/8), 150, 30), "Back to Main Menu"))
			{
				Character.resetId();
				Application.LoadLevel("MainMenu");
			}
		}
	}
}
